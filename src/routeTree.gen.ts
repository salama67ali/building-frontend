/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppDashboardRouteImport } from './routes/_app/dashboard'
import { Route as DemoDemoTanstackQueryRouteImport } from './routes/_demo/demo.tanstack-query'
import { Route as DemoDemoTableRouteImport } from './routes/_demo/demo.table'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppDashboardRoute = AppDashboardRouteImport.update({
  id: '/_app/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoDemoTanstackQueryRoute = DemoDemoTanstackQueryRouteImport.update({
  id: '/_demo/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoDemoTableRoute = DemoDemoTableRouteImport.update({
  id: '/_demo/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/dashboard': typeof AppDashboardRoute
  '/demo/table': typeof DemoDemoTableRoute
  '/demo/tanstack-query': typeof DemoDemoTanstackQueryRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/dashboard': typeof AppDashboardRoute
  '/demo/table': typeof DemoDemoTableRoute
  '/demo/tanstack-query': typeof DemoDemoTanstackQueryRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/_app/dashboard': typeof AppDashboardRoute
  '/_demo/demo/table': typeof DemoDemoTableRoute
  '/_demo/demo/tanstack-query': typeof DemoDemoTanstackQueryRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
    | '/demo/table'
    | '/demo/tanstack-query'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
    | '/demo/table'
    | '/demo/tanstack-query'
  id:
    | '__root__'
    | '/'
    | '/sign-in'
    | '/sign-up'
    | '/_app/dashboard'
    | '/_demo/demo/table'
    | '/_demo/demo/tanstack-query'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  AppDashboardRoute: typeof AppDashboardRoute
  DemoDemoTableRoute: typeof DemoDemoTableRoute
  DemoDemoTanstackQueryRoute: typeof DemoDemoTanstackQueryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_demo/demo/tanstack-query': {
      id: '/_demo/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoDemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_demo/demo/table': {
      id: '/_demo/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoDemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  AppDashboardRoute: AppDashboardRoute,
  DemoDemoTableRoute: DemoDemoTableRoute,
  DemoDemoTanstackQueryRoute: DemoDemoTanstackQueryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
